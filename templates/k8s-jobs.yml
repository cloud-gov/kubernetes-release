instance_groups:
- name: consul
  jobs:
  - name: consul
    release: consul
  - name: pre-start-script
    release: os-conf
    properties:
      script: &apt_patch |
        #!/bin/bash
        apt-get update
        apt-get -y remove \
          rsync vim-tiny vim-gui-common python2.7-minimal python3.5-minimal \
          linux-firmware `# USN-4351-1`
        apt-get -y upgrade vim=2:7.4.1689-3ubuntu1.4
        apt-get -y upgrade libarchive13=3.1.2-11ubuntu0.16.04.8
        apt-get -y upgrade libsqlite3-0=3.11.0-1ubuntu1.5 sqlite3=3.11.0-1ubuntu1.5
        apt-get -y upgrade libicu55=55.1-7ubuntu0.5
        apt-get -y upgrade python2.7=2.7.12-1ubuntu0~16.04.11
        apt-get -y upgrade python3.5=3.5.2-2ubuntu0~16.04.10
        apt-get -y upgrade file=1:5.25-2ubuntu1.4 `# USN-3911-2`
        apt-get -y upgrade libmagic1=1:5.25-2ubuntu1.4 `# USN-3911-2`
        apt-get -y upgrade apt=1.2.32ubuntu0.1 `# USN-4359-1`
        /bin/true
  instances: 3
  vm_type: kubernetes_consul
  disk_type: kubernetes
  stemcell: default
  azs: [z1]
  networks:
  - name: services
    static_ips: (( param "specify static ips for consul instances" ))

- name: etcd
  jobs:
  - name: etcd
    release: kubernetes
    properties:
      etcd:
        machines: (( grab instance_groups.etcd.networks.services.static_ips ))
        require_ssl: false
        peer_require_ssl: false
  - name: pre-start-script
    release: os-conf
    properties:
      script: *apt_patch
  instances: 3
  vm_type: kubernetes_etcd
  disk_type: kubernetes
  stemcell: default
  azs: [z1]
  networks:
  - name: services
    static_ips: (( param "specify static ips for etcd instances" ))

- name: master
  jobs:
  - name: docker
    release: kubernetes
  - name: flannel
    release: kubernetes
  - name: kubernetes-minion
    release: kubernetes
    properties:
      manifest-dirs: [/var/vcap/jobs/kubernetes-master/manifests]
      schedulable: false
      apiserver:
        hosts: (( grab instance_groups.master.networks.services.static_ips ))
      cloud-credentials: (( param "specify cloud-credentials" ))
  - name: kubernetes-master
    release: kubernetes
    properties:
      etcd:
        machines: (( grab instance_groups.etcd.networks.services.static_ips ))
      consul:
        join_hosts: (( grab instance_groups.consul.networks.services.static_ips ))
      apiserver:
        hosts: (( grab instance_groups.master.networks.services.static_ips ))
      cloud-credentials: (( param "specify cloud-credentials" ))
      certs:
        ca: (( param "specify CA cert" ))
        kubernetes: (( param "specify kubernetes cert" ))
        kubernetes-key: (( param "specify kubernetes cert key" ))
  - name: pre-start-script
    release: os-conf
    properties:
      script: *apt_patch
  instances: 3
  vm_type: kubernetes_master
  disk_type: kubernetes
  stemcell: default
  azs: [z1]
  networks:
  - name: services
    static_ips: (( param "specify static ips for master instances" ))

- name: minion
  jobs:
  - name: docker
    release: kubernetes
  - name: flannel
    release: kubernetes
  - name: kubernetes-minion
    release: kubernetes
    properties:
      schedulable: true
      apiserver:
        hosts: (( grab instance_groups.master.networks.services.static_ips ))
      cloud-credentials: (( param "specify cloud-credentials" ))
  - name: pre-start-script
    release: os-conf
    properties:
      script: *apt_patch
  instances: 3
  vm_type: kubernetes_minion
  disk_type: kubernetes
  stemcell: default
  azs: [z1]
  networks:
  - name: services
    static_ips: (( param "specify static ips for minion instances" ))

- name: create-kubernetes-dns
  lifecycle: errand
  jobs:
  - name: create-kubernetes-dns
    release: kubernetes
    properties:
      apiserver:
        host: (( grab instance_groups.master.networks.services.static_ips.[0] ))
  instances: 1
  vm_type: errand_small
  stemcell: default
  azs: [z1]
  networks:
  - name: services

- name: create-kubernetes-monitoring
  lifecycle: errand
  jobs:
  - name: create-kubernetes-monitoring
    release: kubernetes
    properties:
      nodes: (( grab instance_groups.master.networks.services.static_ips instance_groups.minion.networks.services.static_ips ))
      apiserver:
        host: (( grab instance_groups.master.networks.services.static_ips.[0] ))
  instances: 1
  vm_type: errand_small
  stemcell: default
  azs: [z1]
  networks:
  - name: services

- name: apply-kubernetes-manifests
  lifecycle: errand
  jobs:
  - name: apply-kubernetes-manifests
    release: kubernetes
    properties:
      apiserver:
        host: (( grab instance_groups.master.networks.services.static_ips.[0] ))
  instances: 1
  vm_type: errand_small
  stemcell: default
  azs: [z1]
  networks:
  - name: services
